use proc_assignment1;
Create table EMP(EMPNO numeric(4) not null, ENAME varchar(30) not null, JOB varchar(10), MGR numeric(4),
     HIREDATE date, SAL numeric(7,2), DEPTNO numeric(2) );

Insert into EMP(EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DEPTNO) values(1000, 'Manish', 'SALESMAN', 1003, '2020-02-18', 600, 30);
Insert into EMP(EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DEPTNO) values(1001, 'Manoj' , 'SALESMAN', 1003, '2018-02-18', 600, 30);
Insert into EMP(EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DEPTNO) values(1002, 'Ashish', 'SALESMAN',1003 , '2013-02-18', 750, 30);
Insert into EMP(EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DEPTNO) values(1004, 'Rekha', 'ANALYST', 1006 , '2001-02-18', 3000, 10);
Insert into EMP(EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DEPTNO) values(1005, 'Sachin', 'ANALYST', 1006 , '2019-02-18', 3000, 10);
Insert into EMP(EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DEPTNO) values(1006, 'Pooja', 'MANAGER', null, '2000-02-18', 6000, 10);

select * from emp;

create table dept(dno numeric(4) not null, dname varchar(10) not null, area varchar(30));
desc dept;

Insert into dept(dno,dname,area) values(10,'Store','Mumbai');
Insert into dept(dno,dname,area) values(20,'Purchase','Mumbai');
Insert into dept(dno,dname,area) values(30,'Store', 'Delhi');
Insert into dept(dno,dname,area) values(40,'Marketing','Pune');
Insert into dept(dno,dname,area) values(50,'Finance','Delhi');
Insert into dept(dno,dname,area) values(60,'Accounts','Mumbai');

select * from dept;

----------- 1.Write a Procedure that accepts values of two non-zero numbers using IN parameter and perform 
-------------- addition, subtraction, multiplication, division and print.
delimiter $$
create procedure Que_1(IN a int, IN b int)
begin 
declare c int;
set c=a+b;
select c;
set c=a-b;
select c;
set c=a*b;
select c;
set c=a/b;
select c;
end $$

call Que_1(10,2);

-------- 2. Write a Procedure to print the string in REVERSE order. Take the input using IN parameter.
-------- (Ex .Database , o/p :esabatad).

delimiter $$
create procedure Que_2(INOUT str varchar(10))
begin 
set str= (select reverse(str));
end $$

set @str='DATABASE';

call Que_2(@str);
select @str as rev;

-------- 3. Write a Procedure to display top 5 employee based on highest salary and display employee 
-------- number, employee name and salary.

delimiter $$
create procedure Que_3()
begin
select empno, ename, sal from emp order by sal desc limit 5;
end $$

call Que_3;

-------- 4.Write a Procedure to create table emp_test with e_id integer, e_name varchar(10), 
-------- e_joining_date date as columns.

delimiter $$
create procedure Que_4()
begin
create table emp_test(e_id integer(10), e_name varchar(10), e_joining_date date);
end $$

call Que_4;

-------- 5.Write a Procedure to add a department row in the DEPT table with the following values for columns
-------- deptno  value 60,Dname  value should be  ‘Education’, area value should be Pune.

delimiter $$
create procedure Que_5()
begin
insert into dept(dno, dname , area) values(60, 'Education', 'Pune');
end $$

call Que_5;

select * from dept;

-------- 6.Write a program that declares an integer variable called num, assigns a value to it and print, 
-------- the value of the variable itself, its square, and its cube.

delimiter $$
create procedure Que_6(INOUT num int, out sqr int, out cube int)
begin
declare num1 int;
set num1=num;
select num, power(num, 2), power(num, 3) into num,sqr,cube;
end $$
set @num = 2;
call Que_6(@num, @sqr, @cube);
select @num, @sqr, @cube;

----- 7.Write a program that declares an integer variable assign a value to it and display it using OUT parameter.

delimiter $$
create procedure Que_7(INOUT ans int)
begin
declare num int;
set num= 2;
select num into ans;
end $$

call Que_7(@ans);
select @ans;

----- 8.Write a program that demonstrates the usage of IN and OUT parameters.

delimiter $$
create procedure Que_8(IN x int, OUT str varchar(50))
begin
select concat(e.ename, '_is from ' ,d.dname) into str from emp e inner join dept d on d.dno=e.deptno where e.deptno=x and e.empno=1004;
end $$

call Que_8(10, @str);
select @str;





