
create database cursor_assignment;
use cursor_assignment;

Create table EMPL(EMPNO numeric(4) not null, ENAME varchar(30) not null, JOB varchar(10), MGR numeric(4),
     HIREDATE date, SAL numeric(7,2), DEPTNO numeric(2) );

Insert into EMPL(EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DEPTNO) values(1000, 'Manish', 'SALESMAN', 1003, '2020-02-18', 600, 30);
Insert into EMPL(EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DEPTNO) values(1001, 'Manoj' , 'SALESMAN', 1003, '2018-02-18', 600, 30);
Insert into EMPL(EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DEPTNO) values(1002, 'Ashish', 'SALESMAN',1003 , '2013-02-18', 750, 30);
Insert into EMPL(EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DEPTNO) values(1004, 'Rekha', 'ANALYST', 1006 , '2001-02-18', 3000, 10);
Insert into EMPL(EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DEPTNO) values(1005, 'Sachin', 'ANALYST', 1006 , '2019-02-18', 3000, 10);
Insert into EMPL(EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DEPTNO) values(1006, 'Pooja', 'MANAGER', null, '2000-02-18', 6000, 10);


 SELECT * FROM EMPL;  


----- Q1
DELIMITER $$
CREATE PROCEDURE cur_ex()
BEGIN
DECLARE sal_point int;
DECLARE c_emp int;
DECLARE finished int default 0;
DECLARE sa_cur CURSOR FOR SELECT EMPNO,SAL FROM EMPL WHERE JOB='Analyst';
DECLARE CONTINUE HANDLER FOR NOT FOUND SET finished = 1;
OPEN sa_cur;
get_sal : LOOP
          FETCH sa_cur INTO c_emp,sal_point;
       IF finished = 1
       THEN
       LEAVE get_sal;
       END IF;
        SELECT c_emp,sal_point FROM EMPL limit 1;
       END LOOP get_sal;
       	CLOSE sa_cur;
        END $$
        
        CALL cur_ex();
        
  ----- Q2      

  DELIMITER $$
CREATE PROCEDURE cur_e()
BEGIN
DECLARE sal_point int;
DECLARE c_emp int;
DECLARE e_nam varchar(20);
DECLARE finished int default 0;
DECLARE sa_cur CURSOR FOR SELECT EMPNO,ENAME,SAL  FROM EMPL ORDER BY SAL DESC;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET finished = 1;
OPEN sa_cur;
get_sal : LOOP
          FETCH sa_cur INTO c_emp,e_nam,sal_point;
       IF finished = 1
       THEN
       LEAVE get_sal;
       END IF;
        SELECT c_emp,e_nam,sal_point FROM EMPL LIMIT 1;
       END LOOP get_sal;
       	CLOSE sa_cur;
        END $$
        
        CALL cur_e();
        

  ----- Q3
  
  DELIMITER $$
CREATE PROCEDURE cur_ee()
BEGIN

DECLARE e_nam varchar(20);
DECLARE finished int default 0;
DECLARE sa_cur CURSOR FOR SELECT concat(ENAME,' is a ',JOB) FROM EMPL;
DECLARE EXIT HANDLER FOR NOT FOUND SET finished = 1;
OPEN sa_cur;
get_sal : LOOP
          FETCH sa_cur INTO e_nam;
       IF finished = 1
       THEN
       LEAVE get_sal;
       END IF;
        SELECT e_nam FROM EMPL WHERE ENAME='Pooja';
       END LOOP get_sal;
       	CLOSE sa_cur;
        END $$ 
        
        CALL cur_ee()

  ----- Q4
  
  DELIMITER $$
CREATE PROCEDURE cur_eee()
BEGIN
DECLARE e_no int;
DECLARE e_nam varchar(20);
DECLARE e_job varchar(20);
DECLARE e_mg int;
DECLARE e_date DATE;
DECLARE e_sal int;
DECLARE e_d int;
DECLARE finished int default 0;
DECLARE sa_cur CURSOR FOR SELECT *FROM EMPL WHERE ENAME='Manish';
DECLARE CONTINUE HANDLER FOR NOT FOUND SET finished = 1;
OPEN sa_cur;
get_sal : LOOP
          FETCH sa_cur INTO e_no,e_nam,e_job,e_mg,e_date,e_sal,e_d;
       IF finished = 1
       THEN
       LEAVE get_sal;
       END IF;
        SELECT e_no,e_nam,e_job,e_mg,e_date,e_sal,e_d FROM EMPL LIMIT 1;
       END LOOP get_sal;
       	CLOSE sa_cur;
        END $$ 
        
 DROP PROCEDURE cur_eee;
        
        CALL cur_eee();

  ----- Q5
  
   DELIMITER $$
CREATE PROCEDURE DELEMPNO_DATA()
BEGIN
DECLARE LLEMPNO numeric(4) DEFAULT 0;
DECLARE ERR INT  DEFAULT 0;

DECLARE DELEMPNO CURSOR FOR SELECT EMPNO FROM EMPL WHERE SAL<10000;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET ERR=1;

OPEN DELEMPNO;
     TEST:LOOP
        FETCH DELEMPNO  INTO LLEMPNO;
        IF(ERR=1) THEN 
           LEAVE TEST;
		END IF;
       DELETE FROM EMPL WHERE EMPNO=LLEMPNO;
    END LOOP TEST;
CLOSE DELEMPNO;
END $$

CALL DELEMPNO_DATA()

        